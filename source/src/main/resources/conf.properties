# path to store the files with generated text
save.path=./generate/
# name pattern for the files generated
# y - Use either yy or yyyy for the year.
# M	- Month in year. Number of M's determine length of format (e.g. MM, MMM or MMMMM)
# d	- Day in month. Number of d's determine length of format (e.g. d or dd)
# h - Hour of day, 1-12 (AM / PM) (normally hh)
# H	- Hour of day, 0-23 (normally HH)
# m	- Minute in hour, 0-59 (normally mm)
# s	- Second in minute, 0-59 (normally ss)
save.filename=vms_generated_{yyyyMMddHHmm}.txt

# determines if the properties are stored in a separate file
save.properties_in_seperate_file=false
# save nodes & edges for gephi as {save.filename}_nodes.cvs & {save.filename}_edges.cvs files
save.gephi.nodes=false
# define the following elements as similar {'o', 'a', 'y'}, {'d','l','s'}, {'n', 'r', 'l', 'm'}, {'r', 's'}, {'k','t','p','f'}, {'o', 'e'}, {'1', '2', 'e', 'c'}, {'m', 'g'} with ch=1 and sh=2
save.gephi.use_voynich_similarities=false

# the number of lines to create [number > 1; DEFAULT=500]
text.lines_to_create=1200

# the number of glyphs in a line [number > 40; DEFAULT=55]
text.max_line_length=55

# the minimum number of glyphs for the last line of a paragraph [number > 5; DEFAULT=15]
text.min_line_length=15

# the number of lines for a page [number > 1; DEFAULT=29]
text.lines_per_page=29

# the number of times a word can occur repeated [0 < number <= 5; DEFAULT=3]
text.max_repeat_count=3

# the seed for initializing the text generator [DEFAULT=text in line f103v.P.9]
text.initial_line=pchal shal shorchdy okeor okain shedy pchedy qotchedy qotar ol lkar

# Choose implementation of the random number generator [pseudo, real]
# pseudo (DEFAULT) - two runs will generate the same output
# real - real random numbers - the output is different for each run
method.random=pseudo
# seed to initialize the pseudo random number generator [auto; 1 <= number <= 9999; DEFAULT=19]
# auto - try all seeds between 1 and 100 and choose a seed that generates more word types then average
method.random.pseudo.seed=19

# Choose implementation to determine which tokens can follow after each other [curveline, statistic, voynich, none]
# curveline (DEFAULT) - based on the curve line theorem (tokens based on a e-curve like e,o,y,d,s and tokens based on a i-line like i,r,n can follow each other)
# statistic - based on calculated statistics for the VMS
# voynich - use a dictionary of all VMS glyph groups (the generated text will mainly contain glyph groups that exists in the VMS)
# none - no check - two tokens can always follow each other
method.canFollow=curveline
# an error rate for allowing weird glyph groups like 'doiin' [0 <= number <= 10; DEFAULT=0]
method.canFollow.error_rate=0

# Choose implementation for choosing the source group [page, position, random]
# page (DEFAULT) - prefers source groups from the same page
# position - prefers source groups close to the writing position (more complex implementation)
# random - choose source words randomly (very simple implementation)
method.sourceChooser=page

# probability to choose a word in writing position from a previous line [0 <= number <= 10; DEFAULT=28]
method.sourceChooser.same_position_probability=28

# Choose implementation for modifying a source group [slim]
# slim (DEFAULT) - methods to modify a group
method.morph=slim
# the probability to use add & remove to morph the source group. If it is set to zero add & remove is not used. [number <= 80; DEFAULT=20]
method.morph.add_remove.probability=20
# the probability to use combine & split to morph the source group. If it is set to zero combine & split is not used. [number <= 80; DEFAULT=30]
method.morph.combine_split.probability=30
# the probability to use replace to morph the source group [number >= 20; DEFAULT=50]
method.morph.replace.probability=50
# the probability to use a newly generated glyph group as source [0 <= number <= 20; DEFAULT=10]
# Generates sequences like "chol ol". If it is set to zero a newly generated glyph group is not used as source for a second group.
method.morph.reuse_last.probability=10
# the probability to use combined groups are dismissed as source groups  [0 <= number <= 100; DEFAULT=30]
method.morph.combined.dismiss_as_source_probability=30
# use word final substitutions like chor -> chy [true, false; DEFAULT=true]
method.morph.use_word_final_substitutions=true

# SUGGESTION - suggestions are used if the number of '-in', '-ol' or '-dy' groups is to low [top, daiin, random, none]
# top (DEFAULT) - use the most often used group as suggestions
# daiin - use daiin, ol and chedy as suggestions
# random - choose the suggested group randomly
# none - don't use suggestions
method.suggestions=top
# the probability to use suggestions. If it is set to zero no suggestions are used. [number <= 100; DEFAULT=40]
method.suggestions.probability=40

# min percentage of groups using 'i' glyphs like 'daiin'
method.suggestions.iType_min_percentage=20
# min percentage of groups using 'ol' tokens like 'chol'
method.suggestions.olType_min_percentage=25
# min percentage of groups using 'dy' glyphs like 'chedy'
method.suggestions.dyType_min_percentage=25